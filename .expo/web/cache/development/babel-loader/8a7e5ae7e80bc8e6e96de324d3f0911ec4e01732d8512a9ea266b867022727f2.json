{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useSelector } from 'react-redux';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport HomeScreen from \"../screens/home/HomeScreen\";\nimport DailyCardScreen from \"../screens/daily-card/DailyCardScreen\";\nimport SpreadsScreen from \"../screens/spreads/SpreadsScreen\";\nimport SpreadDetailScreen from \"../screens/spreads/SpreadDetailScreen\";\nimport ReadingResultScreen from \"../screens/spreads/ReadingResultScreen\";\nimport CardLibraryScreen from \"../screens/card-library/CardLibraryScreen\";\nimport CardDetailScreen from \"../screens/card-library/CardDetailScreen\";\nimport JournalScreen from \"../screens/journal/JournalScreen\";\nimport JournalEntryScreen from \"../screens/journal/JournalEntryScreen\";\nimport AffirmationsScreen from \"../screens/affirmations/AffirmationsScreen\";\nimport SettingsScreen from \"../screens/settings/SettingsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabNavigator = function MainTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: '#FAF3E0',\n        borderTopWidth: 0,\n        elevation: 0,\n        shadowOpacity: 0,\n        height: 60\n      },\n      tabBarActiveTintColor: '#9B59B6',\n      tabBarInactiveTintColor: '#8E8E93',\n      tabBarLabelStyle: {\n        fontSize: 12,\n        fontWeight: '500',\n        marginBottom: 5\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Home'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"DailyCard\",\n      component: DailyCardScreen,\n      options: {\n        tabBarLabel: 'Daily Card'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Spreads\",\n      component: SpreadsScreen,\n      options: {\n        tabBarLabel: 'Spreads'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Journal\",\n      component: JournalScreen,\n      options: {\n        tabBarLabel: 'Journal'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        tabBarLabel: 'Settings'\n      }\n    })]\n  });\n};\nvar AuthStackNavigator = function AuthStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      contentStyle: {\n        backgroundColor: '#FAF3E0'\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    })]\n  });\n};\nvar MainStackNavigator = function MainStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      contentStyle: {\n        backgroundColor: '#FAF3E0'\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"MainTabs\",\n      component: MainTabNavigator\n    }), _jsx(Stack.Screen, {\n      name: \"CardDetail\",\n      component: CardDetailScreen\n    }), _jsx(Stack.Screen, {\n      name: \"SpreadDetail\",\n      component: SpreadDetailScreen\n    }), _jsx(Stack.Screen, {\n      name: \"ReadingResult\",\n      component: ReadingResultScreen\n    }), _jsx(Stack.Screen, {\n      name: \"JournalEntry\",\n      component: JournalEntryScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Affirmations\",\n      component: AffirmationsScreen\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var isAuthenticated = useSelector(function (state) {\n    return state.auth.isAuthenticated;\n  });\n  return _jsx(NavigationContainer, {\n    children: isAuthenticated ? _jsx(MainStackNavigator, {}) : _jsx(AuthStackNavigator, {})\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","useSelector","LoginScreen","RegisterScreen","HomeScreen","DailyCardScreen","SpreadsScreen","SpreadDetailScreen","ReadingResultScreen","CardLibraryScreen","CardDetailScreen","JournalScreen","JournalEntryScreen","AffirmationsScreen","SettingsScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainTabNavigator","Navigator","screenOptions","headerShown","tabBarStyle","backgroundColor","borderTopWidth","elevation","shadowOpacity","height","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","fontSize","fontWeight","marginBottom","children","Screen","name","component","options","tabBarLabel","AuthStackNavigator","contentStyle","MainStackNavigator","AppNavigator","isAuthenticated","state","auth"],"sources":["/Users/gelvihleonid/Documents/AiDEV/CODEPROJECTS/TarotApp/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useSelector } from 'react-redux';\n\n// Import screens (to be created)\nimport LoginScreen from '../screens/auth/LoginScreen';\nimport RegisterScreen from '../screens/auth/RegisterScreen';\nimport HomeScreen from '../screens/home/HomeScreen';\nimport DailyCardScreen from '../screens/daily-card/DailyCardScreen';\nimport SpreadsScreen from '../screens/spreads/SpreadsScreen';\nimport SpreadDetailScreen from '../screens/spreads/SpreadDetailScreen';\nimport ReadingResultScreen from '../screens/spreads/ReadingResultScreen';\nimport CardLibraryScreen from '../screens/card-library/CardLibraryScreen';\nimport CardDetailScreen from '../screens/card-library/CardDetailScreen';\nimport JournalScreen from '../screens/journal/JournalScreen';\nimport JournalEntryScreen from '../screens/journal/JournalEntryScreen';\nimport AffirmationsScreen from '../screens/affirmations/AffirmationsScreen';\nimport SettingsScreen from '../screens/settings/SettingsScreen';\n\n// Create navigators\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Main tab navigator\nconst MainTabNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        headerShown: false,\n        tabBarStyle: {\n          backgroundColor: '#FAF3E0',\n          borderTopWidth: 0,\n          elevation: 0,\n          shadowOpacity: 0,\n          height: 60,\n        },\n        tabBarActiveTintColor: '#9B59B6',\n        tabBarInactiveTintColor: '#8E8E93',\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '500',\n          marginBottom: 5,\n        },\n      }}\n    >\n      <Tab.Screen \n        name=\"Home\" \n        component={HomeScreen} \n        options={{\n          tabBarLabel: 'Home',\n          // tabBarIcon will be added later\n        }}\n      />\n      <Tab.Screen \n        name=\"DailyCard\" \n        component={DailyCardScreen} \n        options={{\n          tabBarLabel: 'Daily Card',\n          // tabBarIcon will be added later\n        }}\n      />\n      <Tab.Screen \n        name=\"Spreads\" \n        component={SpreadsScreen} \n        options={{\n          tabBarLabel: 'Spreads',\n          // tabBarIcon will be added later\n        }}\n      />\n      <Tab.Screen \n        name=\"Journal\" \n        component={JournalScreen} \n        options={{\n          tabBarLabel: 'Journal',\n          // tabBarIcon will be added later\n        }}\n      />\n      <Tab.Screen \n        name=\"Settings\" \n        component={SettingsScreen} \n        options={{\n          tabBarLabel: 'Settings',\n          // tabBarIcon will be added later\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\n// Auth stack navigator\nconst AuthStackNavigator = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        contentStyle: {\n          backgroundColor: '#FAF3E0',\n        },\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n    </Stack.Navigator>\n  );\n};\n\n// Main stack navigator that includes tabs and other screens\nconst MainStackNavigator = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        contentStyle: {\n          backgroundColor: '#FAF3E0',\n        },\n      }}\n    >\n      <Stack.Screen name=\"MainTabs\" component={MainTabNavigator} />\n      <Stack.Screen name=\"CardDetail\" component={CardDetailScreen} />\n      <Stack.Screen name=\"SpreadDetail\" component={SpreadDetailScreen} />\n      <Stack.Screen name=\"ReadingResult\" component={ReadingResultScreen} />\n      <Stack.Screen name=\"JournalEntry\" component={JournalEntryScreen} />\n      <Stack.Screen name=\"Affirmations\" component={AffirmationsScreen} />\n    </Stack.Navigator>\n  );\n};\n\n// Root navigator that switches between auth and main flows\nconst AppNavigator = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n\n  return (\n    <NavigationContainer>\n      {isAuthenticated ? <MainStackNavigator /> : <AuthStackNavigator />}\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}