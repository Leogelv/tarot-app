{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TarotCardDemo = function TarotCardDemo() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFlipped = _useState2[0],\n    setIsFlipped = _useState2[1];\n  var sampleCard = {\n    name: \"The Fool\",\n    number: \"0\",\n    arcana: \"Major Arcana\",\n    meanings: {\n      light: [\"Freeing yourself from limitation\", \"Expressing joy and youthful vigor\", \"Being open-minded\", \"Taking a leap of faith\"]\n    },\n    modern_interpretation: \"This card represents new beginnings, taking a leap of faith, and embracing freedom.\",\n    affirmation: \"I embrace new beginnings with joy and openness.\"\n  };\n  var handleFlip = function handleFlip() {\n    setIsFlipped(!isFlipped);\n  };\n  return _jsx(TouchableOpacity, {\n    style: styles.container,\n    onPress: handleFlip,\n    activeOpacity: 0.9,\n    children: _jsx(View, {\n      style: [styles.card, isFlipped && styles.flippedCard],\n      children: isFlipped ? _jsxs(View, {\n        style: styles.cardBack,\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: sampleCard.name\n        }), _jsxs(Text, {\n          style: styles.cardNumber,\n          children: [sampleCard.arcana, \" \\u2022 \", sampleCard.number]\n        }), _jsx(Text, {\n          style: styles.cardMeaning,\n          children: sampleCard.modern_interpretation\n        }), _jsxs(Text, {\n          style: styles.cardAffirmation,\n          children: [\"\\u2728 \", sampleCard.affirmation, \" \\u2728\"]\n        })]\n      }) : _jsxs(View, {\n        style: styles.cardFront,\n        children: [_jsx(Text, {\n          style: styles.tapHint,\n          children: \"Tap to reveal\"\n        }), _jsx(Image, {\n          source: {\n            uri: 'https://i.imgur.com/CbkRmjw.png'\n          },\n          style: styles.cardImage,\n          resizeMode: \"contain\"\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%'\n  },\n  card: {\n    width: 200,\n    height: 340,\n    borderRadius: 10,\n    backgroundColor: '#FFF',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#E0D4C0'\n  },\n  flippedCard: {\n    backgroundColor: '#F5E9FF'\n  },\n  cardFront: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cardBack: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cardImage: {\n    width: 150,\n    height: 240\n  },\n  tapHint: {\n    fontSize: 14,\n    color: '#9B59B6',\n    fontStyle: 'italic',\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#9B59B6',\n    marginBottom: 5,\n    textAlign: 'center'\n  },\n  cardNumber: {\n    fontSize: 12,\n    color: '#8E44AD',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  cardMeaning: {\n    fontSize: 16,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20,\n    lineHeight: 22\n  },\n  cardAffirmation: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    color: '#9B59B6',\n    textAlign: 'center',\n    paddingHorizontal: 10\n  }\n});\nexport default TarotCardDemo;","map":{"version":3,"names":["React","useState","View","StyleSheet","Text","TouchableOpacity","Image","jsx","_jsx","jsxs","_jsxs","TarotCardDemo","_useState","_useState2","_slicedToArray","isFlipped","setIsFlipped","sampleCard","name","number","arcana","meanings","light","modern_interpretation","affirmation","handleFlip","style","styles","container","onPress","activeOpacity","children","card","flippedCard","cardBack","cardTitle","cardNumber","cardMeaning","cardAffirmation","cardFront","tapHint","source","uri","cardImage","resizeMode","create","justifyContent","alignItems","width","height","borderRadius","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","padding","borderWidth","borderColor","fontSize","color","fontStyle","marginBottom","fontWeight","textAlign","lineHeight","paddingHorizontal"],"sources":["/Users/gelvihleonid/Documents/AiDEV/CODEPROJECTS/TarotApp/src/screens/home/TarotCardDemo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Text, TouchableOpacity, Image } from 'react-native';\n\nconst TarotCardDemo = () => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  \n  // Sample card data\n  const sampleCard = {\n    name: \"The Fool\",\n    number: \"0\",\n    arcana: \"Major Arcana\",\n    meanings: {\n      light: [\n        \"Freeing yourself from limitation\",\n        \"Expressing joy and youthful vigor\",\n        \"Being open-minded\",\n        \"Taking a leap of faith\"\n      ]\n    },\n    modern_interpretation: \"This card represents new beginnings, taking a leap of faith, and embracing freedom.\",\n    affirmation: \"I embrace new beginnings with joy and openness.\"\n  };\n  \n  const handleFlip = () => {\n    setIsFlipped(!isFlipped);\n  };\n  \n  return (\n    <TouchableOpacity style={styles.container} onPress={handleFlip} activeOpacity={0.9}>\n      <View style={[styles.card, isFlipped && styles.flippedCard]}>\n        {isFlipped ? (\n          <View style={styles.cardBack}>\n            <Text style={styles.cardTitle}>{sampleCard.name}</Text>\n            <Text style={styles.cardNumber}>{sampleCard.arcana} • {sampleCard.number}</Text>\n            <Text style={styles.cardMeaning}>{sampleCard.modern_interpretation}</Text>\n            <Text style={styles.cardAffirmation}>✨ {sampleCard.affirmation} ✨</Text>\n          </View>\n        ) : (\n          <View style={styles.cardFront}>\n            <Text style={styles.tapHint}>Tap to reveal</Text>\n            <Image \n              source={{ uri: 'https://i.imgur.com/CbkRmjw.png' }}\n              style={styles.cardImage}\n              resizeMode=\"contain\"\n            />\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n  },\n  card: {\n    width: 200,\n    height: 340,\n    borderRadius: 10,\n    backgroundColor: '#FFF',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#E0D4C0',\n  },\n  flippedCard: {\n    backgroundColor: '#F5E9FF',\n  },\n  cardFront: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cardBack: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cardImage: {\n    width: 150,\n    height: 240,\n  },\n  tapHint: {\n    fontSize: 14,\n    color: '#9B59B6',\n    fontStyle: 'italic',\n    marginBottom: 10,\n  },\n  cardTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#9B59B6',\n    marginBottom: 5,\n    textAlign: 'center',\n  },\n  cardNumber: {\n    fontSize: 12,\n    color: '#8E44AD',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  cardMeaning: {\n    fontSize: 16,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20,\n    lineHeight: 22,\n  },\n  cardAffirmation: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    color: '#9B59B6',\n    textAlign: 'center',\n    paddingHorizontal: 10,\n  }\n});\n\nexport default TarotCardDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}