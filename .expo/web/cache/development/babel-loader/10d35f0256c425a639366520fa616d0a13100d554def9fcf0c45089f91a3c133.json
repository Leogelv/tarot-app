{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TarotCard3D from \"../components/3d/TarotCard3D\";\nimport AudioReactiveComponent from \"../components/animations/AudioReactiveComponent\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar TarotCardDemo = function TarotCardDemo() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCard = _useState2[0],\n    setSelectedCard = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFlipped = _useState4[0],\n    setIsFlipped = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    audioEnabled = _useState6[0],\n    setAudioEnabled = _useState6[1];\n  var sampleCard = {\n    name: \"The Fool\",\n    number: \"0\",\n    arcana: \"Major Arcana\",\n    suit: null,\n    image: \"m00.jpg\",\n    fortune_telling: [\"Watch for new projects and new beginnings\", \"Prepare to take something on faith\", \"Something new comes your way; go for it\"],\n    keywords: [\"freedom\", \"faith\", \"inexperience\", \"innocence\"],\n    meanings: {\n      light: [\"Freeing yourself from limitation\", \"Expressing joy and youthful vigor\", \"Being open-minded\", \"Taking a leap of faith\"],\n      shadow: [\"Being gullible and naive\", \"Taking unnecessary risks\", \"Failing to be serious when required\"]\n    },\n    modern_interpretation: \"This card represents freeing yourself from limitation, expressing joy, and being open-minded.\",\n    affirmation: \"I embrace freedom and welcome its energy into my life.\"\n  };\n  useEffect(function () {\n    setSelectedCard(sampleCard);\n  }, []);\n  var handleFlip = function handleFlip(flipped) {\n    setIsFlipped(flipped);\n  };\n  var toggleAudio = function toggleAudio() {\n    setAudioEnabled(!audioEnabled);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"3D Tarot Card Demo\"\n    }), _jsx(View, {\n      style: styles.cardContainer,\n      children: audioEnabled ? _jsx(AudioReactiveComponent, {\n        audioFile: \"../../assets/audio/effects/magical_chime.mp3\",\n        sensitivity: 2,\n        autoPlay: true,\n        loop: true,\n        visualizerType: \"pulse\",\n        style: styles.audioContainer,\n        children: selectedCard && _jsx(TarotCard3D, {\n          card: selectedCard,\n          onFlip: handleFlip,\n          initiallyFlipped: isFlipped\n        })\n      }) : selectedCard && _jsx(TarotCard3D, {\n        card: selectedCard,\n        onFlip: handleFlip,\n        initiallyFlipped: isFlipped\n      })\n    }), _jsxs(View, {\n      style: styles.instructionsContainer,\n      children: [_jsx(Text, {\n        style: styles.instructionsTitle,\n        children: \"Interactions:\"\n      }), _jsx(Text, {\n        style: styles.instructionText,\n        children: \"\\u2022 Drag to rotate the card in 3D space\"\n      }), _jsx(Text, {\n        style: styles.instructionText,\n        children: \"\\u2022 Tap to flip the card\"\n      }), _jsx(Text, {\n        style: styles.instructionText,\n        children: \"\\u2022 Watch the card gently float\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: [styles.audioButton, audioEnabled && styles.audioButtonActive],\n      onPress: toggleAudio,\n      children: _jsx(Text, {\n        style: [styles.audioButtonText, audioEnabled && styles.audioButtonTextActive],\n        children: audioEnabled ? \"Disable Audio Effects\" : \"Enable Audio Effects\"\n      })\n    }), _jsxs(View, {\n      style: styles.cardInfo,\n      children: [_jsx(Text, {\n        style: styles.cardName,\n        children: selectedCard == null ? void 0 : selectedCard.name\n      }), _jsx(Text, {\n        style: styles.cardDescription,\n        children: selectedCard == null ? void 0 : selectedCard.modern_interpretation\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FAF3E0',\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#9B59B6',\n    marginBottom: 20,\n    marginTop: 40\n  },\n  cardContainer: {\n    height: height * 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  audioContainer: {\n    borderRadius: 20,\n    padding: 20\n  },\n  instructionsContainer: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: 'rgba(155, 89, 182, 0.1)',\n    borderRadius: 10,\n    width: '100%'\n  },\n  instructionsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#9B59B6',\n    marginBottom: 10\n  },\n  instructionText: {\n    fontSize: 16,\n    color: '#4A4A4A',\n    marginBottom: 5\n  },\n  audioButton: {\n    marginTop: 20,\n    backgroundColor: '#F0E6D2',\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 25\n  },\n  audioButtonActive: {\n    backgroundColor: '#9B59B6'\n  },\n  audioButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#9B59B6'\n  },\n  audioButtonTextActive: {\n    color: '#FFFFFF'\n  },\n  cardInfo: {\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  cardName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#9B59B6',\n    marginBottom: 10\n  },\n  cardDescription: {\n    fontSize: 16,\n    color: '#4A4A4A',\n    textAlign: 'center'\n  }\n});\nexport default TarotCardDemo;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Dimensions","TouchableOpacity","Text","TarotCard3D","AudioReactiveComponent","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","TarotCardDemo","_useState","_useState2","_slicedToArray","selectedCard","setSelectedCard","_useState3","_useState4","isFlipped","setIsFlipped","_useState5","_useState6","audioEnabled","setAudioEnabled","sampleCard","name","number","arcana","suit","image","fortune_telling","keywords","meanings","light","shadow","modern_interpretation","affirmation","handleFlip","flipped","toggleAudio","style","styles","container","children","title","cardContainer","audioFile","sensitivity","autoPlay","loop","visualizerType","audioContainer","card","onFlip","initiallyFlipped","instructionsContainer","instructionsTitle","instructionText","audioButton","audioButtonActive","onPress","audioButtonText","audioButtonTextActive","cardInfo","cardName","cardDescription","create","flex","backgroundColor","alignItems","padding","fontSize","fontWeight","color","marginBottom","marginTop","justifyContent","borderRadius","paddingHorizontal","paddingVertical","textAlign"],"sources":["/Users/gelvihleonid/Documents/AiDEV/CODEPROJECTS/TarotApp/src/screens/home/TarotCardDemo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, Dimensions, TouchableOpacity, Text } from 'react-native';\nimport TarotCard3D from '../components/3d/TarotCard3D';\nimport AudioReactiveComponent from '../components/animations/AudioReactiveComponent';\n\nconst { width, height } = Dimensions.get('window');\n\nconst TarotCardDemo = () => {\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [audioEnabled, setAudioEnabled] = useState(false);\n  \n  // Sample card data\n  const sampleCard = {\n    name: \"The Fool\",\n    number: \"0\",\n    arcana: \"Major Arcana\",\n    suit: null,\n    image: \"m00.jpg\",\n    fortune_telling: [\n      \"Watch for new projects and new beginnings\",\n      \"Prepare to take something on faith\",\n      \"Something new comes your way; go for it\"\n    ],\n    keywords: [\"freedom\", \"faith\", \"inexperience\", \"innocence\"],\n    meanings: {\n      light: [\n        \"Freeing yourself from limitation\",\n        \"Expressing joy and youthful vigor\",\n        \"Being open-minded\",\n        \"Taking a leap of faith\"\n      ],\n      shadow: [\n        \"Being gullible and naive\",\n        \"Taking unnecessary risks\",\n        \"Failing to be serious when required\"\n      ]\n    },\n    modern_interpretation: \"This card represents freeing yourself from limitation, expressing joy, and being open-minded.\",\n    affirmation: \"I embrace freedom and welcome its energy into my life.\"\n  };\n  \n  useEffect(() => {\n    // Set the sample card as selected when component mounts\n    setSelectedCard(sampleCard);\n  }, []);\n  \n  const handleFlip = (flipped) => {\n    setIsFlipped(flipped);\n  };\n  \n  const toggleAudio = () => {\n    setAudioEnabled(!audioEnabled);\n  };\n  \n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>3D Tarot Card Demo</Text>\n      \n      <View style={styles.cardContainer}>\n        {audioEnabled ? (\n          <AudioReactiveComponent \n            audioFile=\"../../assets/audio/effects/magical_chime.mp3\"\n            sensitivity={2}\n            autoPlay={true}\n            loop={true}\n            visualizerType=\"pulse\"\n            style={styles.audioContainer}\n          >\n            {selectedCard && (\n              <TarotCard3D \n                card={selectedCard}\n                onFlip={handleFlip}\n                initiallyFlipped={isFlipped}\n              />\n            )}\n          </AudioReactiveComponent>\n        ) : (\n          selectedCard && (\n            <TarotCard3D \n              card={selectedCard}\n              onFlip={handleFlip}\n              initiallyFlipped={isFlipped}\n            />\n          )\n        )}\n      </View>\n      \n      <View style={styles.instructionsContainer}>\n        <Text style={styles.instructionsTitle}>Interactions:</Text>\n        <Text style={styles.instructionText}>• Drag to rotate the card in 3D space</Text>\n        <Text style={styles.instructionText}>• Tap to flip the card</Text>\n        <Text style={styles.instructionText}>• Watch the card gently float</Text>\n      </View>\n      \n      <TouchableOpacity \n        style={[styles.audioButton, audioEnabled && styles.audioButtonActive]} \n        onPress={toggleAudio}\n      >\n        <Text style={[styles.audioButtonText, audioEnabled && styles.audioButtonTextActive]}>\n          {audioEnabled ? \"Disable Audio Effects\" : \"Enable Audio Effects\"}\n        </Text>\n      </TouchableOpacity>\n      \n      <View style={styles.cardInfo}>\n        <Text style={styles.cardName}>{selectedCard?.name}</Text>\n        <Text style={styles.cardDescription}>{selectedCard?.modern_interpretation}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FAF3E0',\n    alignItems: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#9B59B6',\n    marginBottom: 20,\n    marginTop: 40,\n  },\n  cardContainer: {\n    height: height * 0.5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  audioContainer: {\n    borderRadius: 20,\n    padding: 20,\n  },\n  instructionsContainer: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: 'rgba(155, 89, 182, 0.1)',\n    borderRadius: 10,\n    width: '100%',\n  },\n  instructionsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#9B59B6',\n    marginBottom: 10,\n  },\n  instructionText: {\n    fontSize: 16,\n    color: '#4A4A4A',\n    marginBottom: 5,\n  },\n  audioButton: {\n    marginTop: 20,\n    backgroundColor: '#F0E6D2',\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 25,\n  },\n  audioButtonActive: {\n    backgroundColor: '#9B59B6',\n  },\n  audioButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#9B59B6',\n  },\n  audioButtonTextActive: {\n    color: '#FFFFFF',\n  },\n  cardInfo: {\n    marginTop: 20,\n    alignItems: 'center',\n  },\n  cardName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#9B59B6',\n    marginBottom: 10,\n  },\n  cardDescription: {\n    fontSize: 16,\n    color: '#4A4A4A',\n    textAlign: 'center',\n  },\n});\n\nexport default TarotCardDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}