{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Button = function Button(_ref) {\n  var title = _ref.title,\n    onPress = _ref.onPress,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'primary' : _ref$type,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    style = _ref.style,\n    textStyle = _ref.textStyle;\n  var getButtonStyle = function getButtonStyle() {\n    var buttonStyle = [styles.button];\n    if (type === 'primary') {\n      buttonStyle.push(styles.primaryButton);\n    } else if (type === 'secondary') {\n      buttonStyle.push(styles.secondaryButton);\n    } else if (type === 'outline') {\n      buttonStyle.push(styles.outlineButton);\n    } else if (type === 'text') {\n      buttonStyle.push(styles.textButton);\n    }\n    if (size === 'small') {\n      buttonStyle.push(styles.smallButton);\n    } else if (size === 'large') {\n      buttonStyle.push(styles.largeButton);\n    }\n    if (disabled) {\n      buttonStyle.push(styles.disabledButton);\n    }\n    if (style) {\n      buttonStyle.push(style);\n    }\n    return buttonStyle;\n  };\n  var getTextStyle = function getTextStyle() {\n    var textStyleArray = [styles.buttonText];\n    if (type === 'primary') {\n      textStyleArray.push(styles.primaryButtonText);\n    } else if (type === 'secondary') {\n      textStyleArray.push(styles.secondaryButtonText);\n    } else if (type === 'outline') {\n      textStyleArray.push(styles.outlineButtonText);\n    } else if (type === 'text') {\n      textStyleArray.push(styles.textButtonText);\n    }\n    if (size === 'small') {\n      textStyleArray.push(styles.smallButtonText);\n    } else if (size === 'large') {\n      textStyleArray.push(styles.largeButtonText);\n    }\n    if (disabled) {\n      textStyleArray.push(styles.disabledButtonText);\n    }\n    if (textStyle) {\n      textStyleArray.push(textStyle);\n    }\n    return textStyleArray;\n  };\n  return _jsx(TouchableOpacity, {\n    style: getButtonStyle(),\n    onPress: onPress,\n    disabled: disabled,\n    activeOpacity: 0.8,\n    children: _jsx(Text, {\n      style: getTextStyle(),\n      children: title\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 12\n  },\n  primaryButton: {\n    backgroundColor: '#9B59B6'\n  },\n  secondaryButton: {\n    backgroundColor: '#F0E6D2'\n  },\n  outlineButton: {\n    backgroundColor: 'transparent',\n    borderWidth: 1,\n    borderColor: '#9B59B6'\n  },\n  textButton: {\n    backgroundColor: 'transparent',\n    paddingHorizontal: 0,\n    paddingVertical: 5\n  },\n  smallButton: {\n    paddingHorizontal: 15,\n    paddingVertical: 8\n  },\n  largeButton: {\n    paddingHorizontal: 25,\n    paddingVertical: 15\n  },\n  disabledButton: {\n    opacity: 0.5\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    textAlign: 'center'\n  },\n  primaryButtonText: {\n    color: '#FFFFFF'\n  },\n  secondaryButtonText: {\n    color: '#9B59B6'\n  },\n  outlineButtonText: {\n    color: '#9B59B6'\n  },\n  textButtonText: {\n    color: '#9B59B6'\n  },\n  smallButtonText: {\n    fontSize: 14\n  },\n  largeButtonText: {\n    fontSize: 18\n  },\n  disabledButtonText: {\n    opacity: 0.8\n  }\n});\nexport default Button;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","jsx","_jsx","Button","_ref","title","onPress","_ref$type","type","_ref$size","size","_ref$disabled","disabled","style","textStyle","getButtonStyle","buttonStyle","styles","button","push","primaryButton","secondaryButton","outlineButton","textButton","smallButton","largeButton","disabledButton","getTextStyle","textStyleArray","buttonText","primaryButtonText","secondaryButtonText","outlineButtonText","textButtonText","smallButtonText","largeButtonText","disabledButtonText","activeOpacity","children","create","borderRadius","justifyContent","alignItems","paddingHorizontal","paddingVertical","backgroundColor","borderWidth","borderColor","opacity","fontSize","fontWeight","textAlign","color"],"sources":["/Users/gelvihleonid/Documents/AiDEV/CODEPROJECTS/TarotApp/src/components/common/Button.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\n\nconst Button = ({ \n  title, \n  onPress, \n  type = 'primary', \n  size = 'medium', \n  disabled = false,\n  style,\n  textStyle\n}) => {\n  const getButtonStyle = () => {\n    let buttonStyle = [styles.button];\n    \n    // Type styles\n    if (type === 'primary') {\n      buttonStyle.push(styles.primaryButton);\n    } else if (type === 'secondary') {\n      buttonStyle.push(styles.secondaryButton);\n    } else if (type === 'outline') {\n      buttonStyle.push(styles.outlineButton);\n    } else if (type === 'text') {\n      buttonStyle.push(styles.textButton);\n    }\n    \n    // Size styles\n    if (size === 'small') {\n      buttonStyle.push(styles.smallButton);\n    } else if (size === 'large') {\n      buttonStyle.push(styles.largeButton);\n    }\n    \n    // Disabled style\n    if (disabled) {\n      buttonStyle.push(styles.disabledButton);\n    }\n    \n    // Custom style\n    if (style) {\n      buttonStyle.push(style);\n    }\n    \n    return buttonStyle;\n  };\n  \n  const getTextStyle = () => {\n    let textStyleArray = [styles.buttonText];\n    \n    // Type text styles\n    if (type === 'primary') {\n      textStyleArray.push(styles.primaryButtonText);\n    } else if (type === 'secondary') {\n      textStyleArray.push(styles.secondaryButtonText);\n    } else if (type === 'outline') {\n      textStyleArray.push(styles.outlineButtonText);\n    } else if (type === 'text') {\n      textStyleArray.push(styles.textButtonText);\n    }\n    \n    // Size text styles\n    if (size === 'small') {\n      textStyleArray.push(styles.smallButtonText);\n    } else if (size === 'large') {\n      textStyleArray.push(styles.largeButtonText);\n    }\n    \n    // Disabled text style\n    if (disabled) {\n      textStyleArray.push(styles.disabledButtonText);\n    }\n    \n    // Custom text style\n    if (textStyle) {\n      textStyleArray.push(textStyle);\n    }\n    \n    return textStyleArray;\n  };\n  \n  return (\n    <TouchableOpacity\n      style={getButtonStyle()}\n      onPress={onPress}\n      disabled={disabled}\n      activeOpacity={0.8}\n    >\n      <Text style={getTextStyle()}>{title}</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n  },\n  primaryButton: {\n    backgroundColor: '#9B59B6',\n  },\n  secondaryButton: {\n    backgroundColor: '#F0E6D2',\n  },\n  outlineButton: {\n    backgroundColor: 'transparent',\n    borderWidth: 1,\n    borderColor: '#9B59B6',\n  },\n  textButton: {\n    backgroundColor: 'transparent',\n    paddingHorizontal: 0,\n    paddingVertical: 5,\n  },\n  smallButton: {\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n  },\n  largeButton: {\n    paddingHorizontal: 25,\n    paddingVertical: 15,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  primaryButtonText: {\n    color: '#FFFFFF',\n  },\n  secondaryButtonText: {\n    color: '#9B59B6',\n  },\n  outlineButtonText: {\n    color: '#9B59B6',\n  },\n  textButtonText: {\n    color: '#9B59B6',\n  },\n  smallButtonText: {\n    fontSize: 14,\n  },\n  largeButtonText: {\n    fontSize: 18,\n  },\n  disabledButtonText: {\n    opacity: 0.8,\n  },\n});\n\nexport default Button;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}